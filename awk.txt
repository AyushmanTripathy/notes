AWK
  text processing utility

  ```
  awk -F ":" '{ print $n $m }' <filename>

  ```
  print the nth and mth column of delimiter ":"
  if n == 0, prints every column

  NF : number of column in current row
  NR : number of current row

  ```
  awk {print $1"string"$2}

  ```
  print with string between the columns

AWK WITH REGEX

  ```
  awk '/^x/ {print $1}'

  ```
  // selects rows with that regex
  prints 1st column of rows starting with x

  [ad]	  | Selects a or d
  [a-d]	  | Selects any character a through d (a, b, c, or d)
  [^a-d]  | Selects any character except a through d (e, f, g, hâ€¦)
  (red)	  | Parentheses indicate the enclosed letters must appear contiguously
  |	      | Means or in the context of a grouped match
  {n}	    | Modifies the preceding set to mean exactly n times
  {n,}	  | Modifies the preceding set to mean n or more times
  {n,m}	  | Modifies the preceding set to mean between n and m times

SUB() AND GSUB()

  { sub(/apple/, "nut", $1); print $1 }
  replace apple with nut
  sub --> only in one column
  gsub -> every column of the row

LENGTH()

  'length($0) > 7'
  returns lines that have greater than 7 characters

IF()

  { if($NF == "lol") print $0 }
  print row if last column is lol

FOR()

  'BEGIN { for(i=1; i<=10; i++) print i," lol ", i}'
  loop from 1 to 10 and print the string

CONDITIONALS

  '$1 == /^[b,c]/ {print $0}'
  if first column matches regex print the line
  block is executed if the condition before it is true
